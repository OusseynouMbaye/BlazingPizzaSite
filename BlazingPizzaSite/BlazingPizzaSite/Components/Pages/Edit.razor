@page "/edit/{pizzaId:guid}"
@inject IPizzaRepository Repository
@inject NavigationManager Navigation

<PageTitle>Edit</PageTitle>
<h3>Edit</h3>

@if (Pizza is not null)
{
    <div class="row justify-content-center">
        <div class="col-6">
            <EditForm Enhance="true" method="post" FormName="EditPizzaForm" OnValidSubmit="EditPizza" Model="Pizza" autocomplete="off">
                <h3>Edit Pizza @PizzaId</h3>
                <input type="hidden" name="Pizza.PizzaId" value="@Pizza.PizzaId" />

                <div class="mb-3">
                    <label for="Name" class="form-label">Name</label>
                    <InputText id="Name" class="form-control shadow-none" @bind-Value="Pizza.Name" />
                </div>
                <div class="mb-3">
                    <label for="Description" class="form-label">Description</label>
                    <InputText id="Description" class="form-control shadow-none" @bind-Value="Pizza.Description" />
                </div>

                <div class="mb-3">
                    <label for="DateCreation" class="form-label">Created Date</label>
                    <InputDate id="DateCreation" class="form-control shadow-none" @bind-Value="Pizza.CreatedDate" />
                </div>
                <div class="mb-3">
                    <label for="Category" class="form-label">Category</label>
                    <InputSelect id="Category" @bind-Value=Pizza.Category class="form-control shadow-none">
                        <option value="0">Selec Category</option>
                        @foreach (var category in Enum.GetValues(typeof(Category)))
                        {
                            <option value="@category">@category.ToString()</option>
                        }
                    </InputSelect>
                </div>
                <div class="mb-3">
                    <button type="submit" class="btn btn-primary shadow-none">Add Pizza</button>
                    <a href="/" class="btn btn-secondary shadow-none ms-3">Back To List</a>
                </div>

                <DataAnnotationsValidator />
                <ValidationSummary />
            </EditForm>


        </div>
    </div>
}


@code {
    [Parameter]
    public Guid PizzaId { get; set; }

    [SupplyParameterFromForm]
    public Pizza? Pizza { get; set; }

    protected override async Task OnInitializedAsync()
    {

        Pizza ??= await Repository.GetPizzaByIdAsync(PizzaId);

    }

    private async Task EditPizza()
    {
        if (Pizza is not null)
        {
            await Repository.UpdatePizzaAsync(Pizza);
            Navigation.NavigateTo("/");
        }

    }

    private void CancelEdit()
    {
        Navigation.NavigateTo("/");
    }

}
