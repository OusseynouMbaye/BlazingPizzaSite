// <auto-generated />
using System;
using BlazingPizzaSite.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlazingPizzaSite.Infrastructure.Migrations
{
    [DbContext(typeof(SimplePizzaCatalogDbContext))]
    [Migration("20240415100946_adding_imageUrl_in_db")]
    partial class adding_imageUrl_in_db
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.3");

            modelBuilder.Entity("BlazingPizzaSite.Domain.Entities.Pizza", b =>
                {
                    b.Property<Guid>("PizzaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Category")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("DougtType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<string>("Toppings")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Vegan")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Vegetarian")
                        .HasColumnType("INTEGER");

                    b.Property<int>("size")
                        .HasColumnType("INTEGER");

                    b.HasKey("PizzaId");

                    b.ToTable("Pizzas");

                    b.HasData(
                        new
                        {
                            PizzaId = new Guid("d7bf23a0-723c-4e1e-be5b-bf32cb3f991b"),
                            Category = 0,
                            Description = "Pepperoni, Sausage, Canadian Bacon, Bacon, Mozzarella",
                            DougtType = "",
                            ImageUrl = "img/pizzas/beacon.jpg",
                            Name = "Meat Pizza",
                            Price = 12.50m,
                            Toppings = "[]",
                            Vegan = false,
                            Vegetarian = false,
                            size = 2
                        },
                        new
                        {
                            PizzaId = new Guid("f87b7e53-c9d1-4f92-a68b-50d34a01cf10"),
                            Category = 1,
                            Description = "Grilled Chicken, BBQ Sauce, Red Onion, Cilantro, Mozzarella",
                            DougtType = "",
                            ImageUrl = "img/pizzas/meaty.jpg",
                            Name = "Chicken Pizza",
                            Price = 11.50m,
                            Toppings = "[]",
                            Vegan = false,
                            Vegetarian = false,
                            size = 2
                        },
                        new
                        {
                            PizzaId = new Guid("32b2da43-8037-4980-974f-2ab24dcebe40"),
                            Category = 2,
                            Description = "Mushrooms, Olives, Green Peppers, Onions, Mozzarella",
                            DougtType = "",
                            ImageUrl = "img/pizzas/pepperoni.jpg",
                            Name = "Vegetarian Pizza",
                            Price = 10.00m,
                            Toppings = "[]",
                            Vegan = false,
                            Vegetarian = false,
                            size = 2
                        },
                        new
                        {
                            PizzaId = new Guid("7405716b-47e5-4644-b1f9-78d63ac8bb27"),
                            Category = 3,
                            Description = "Mushrooms, Olives, Green Peppers, Onions, Vegan Cheese",
                            DougtType = "",
                            ImageUrl = "img/pizzas/salad.jpg",
                            Name = "Vegan Pizza",
                            Price = 10.00m,
                            Toppings = "[]",
                            Vegan = false,
                            Vegetarian = false,
                            size = 0
                        },
                        new
                        {
                            PizzaId = new Guid("312c262b-f62e-459f-9796-7704d79e9a98"),
                            Category = 4,
                            Description = "Margherita Crust, Mushrooms, Olives, Green Peppers, Onions, Mozzarella",
                            DougtType = "",
                            ImageUrl = "img/pizzas/margherita.jpg",
                            Name = "Margherita Pizza",
                            Price = 14.00m,
                            Toppings = "[]",
                            Vegan = false,
                            Vegetarian = false,
                            size = 2
                        },
                        new
                        {
                            PizzaId = new Guid("0d072c12-4556-43ca-9251-8c84b1b6053a"),
                            Category = 5,
                            Description = "Mushrooms, Olives, Green Peppers, Onions, Mozzarella",
                            DougtType = "",
                            ImageUrl = "img/pizzas/mushroom.jpg",
                            Name = "Mushroom Pizza",
                            Price = 10.00m,
                            Toppings = "[]",
                            Vegan = false,
                            Vegetarian = false,
                            size = 2
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
