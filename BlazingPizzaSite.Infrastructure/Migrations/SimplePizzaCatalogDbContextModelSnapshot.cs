// <auto-generated />
using System;
using BlazingPizzaSite.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlazingPizzaSite.Infrastructure.Migrations
{
    [DbContext(typeof(SimplePizzaCatalogDbContext))]
    partial class SimplePizzaCatalogDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.3");

            modelBuilder.Entity("BlazingPizzaSite.Domain.Entities.Pizza", b =>
                {
                    b.Property<Guid>("PizzaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Category")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("DougtType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<string>("Toppings")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Vegan")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Vegetarian")
                        .HasColumnType("INTEGER");

                    b.Property<int>("size")
                        .HasColumnType("INTEGER");

                    b.HasKey("PizzaId");

                    b.ToTable("Pizzas");

                    b.HasData(
                        new
                        {
                            PizzaId = new Guid("6f854e8d-3fd4-47d5-9af9-28de82f26224"),
                            Category = 0,
                            Description = "Pepperoni, Sausage, Canadian Bacon, Bacon, Mozzarella",
                            DougtType = "",
                            Name = "Meat Pizza",
                            Price = 12.50m,
                            Toppings = "[]",
                            Vegan = false,
                            Vegetarian = false,
                            size = 2
                        },
                        new
                        {
                            PizzaId = new Guid("8c7b7339-b349-487d-bd4c-d56f72f4d969"),
                            Category = 1,
                            Description = "Grilled Chicken, BBQ Sauce, Red Onion, Cilantro, Mozzarella",
                            DougtType = "",
                            Name = "Chicken Pizza",
                            Price = 11.50m,
                            Toppings = "[]",
                            Vegan = false,
                            Vegetarian = false,
                            size = 0
                        },
                        new
                        {
                            PizzaId = new Guid("2c01c03d-d029-4fc4-8330-50acc9d790d2"),
                            Category = 2,
                            Description = "Mushrooms, Olives, Green Peppers, Onions, Mozzarella",
                            DougtType = "",
                            Name = "Vegetarian Pizza",
                            Price = 10.00m,
                            Toppings = "[]",
                            Vegan = false,
                            Vegetarian = false,
                            size = 0
                        },
                        new
                        {
                            PizzaId = new Guid("5f39e561-1e6c-40f0-a395-8bc50a65cae8"),
                            Category = 3,
                            Description = "Mushrooms, Olives, Green Peppers, Onions, Vegan Cheese",
                            DougtType = "",
                            Name = "Vegan Pizza",
                            Price = 10.00m,
                            Toppings = "[]",
                            Vegan = false,
                            Vegetarian = false,
                            size = 0
                        },
                        new
                        {
                            PizzaId = new Guid("ca37bfa8-9afd-4755-80a6-6e27a4bfebaa"),
                            Category = 4,
                            Description = "Gluten-Free Crust, Mushrooms, Olives, Green Peppers, Onions, Mozzarella",
                            DougtType = "",
                            Name = "Gluten-Free Pizza",
                            Price = 14.00m,
                            Toppings = "[]",
                            Vegan = false,
                            Vegetarian = false,
                            size = 0
                        },
                        new
                        {
                            PizzaId = new Guid("81385096-ca34-44bc-8940-63418237e1a5"),
                            Category = 5,
                            Description = "Mushrooms, Olives, Green Peppers, Onions, Mozzarella",
                            DougtType = "",
                            Name = "Nut-Free Pizza",
                            Price = 10.00m,
                            Toppings = "[]",
                            Vegan = false,
                            Vegetarian = false,
                            size = 0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
